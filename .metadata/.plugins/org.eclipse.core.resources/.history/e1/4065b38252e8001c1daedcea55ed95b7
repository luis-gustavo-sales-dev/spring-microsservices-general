package br.dev.luisgustavosales.users.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import br.dev.luisgustavosales.users.entities.User;
import br.dev.luisgustavosales.users.repositories.UserRepository;
import lombok.extern.java.Log;

@Service
@Log
public class UserService {

	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private BCryptPasswordEncoder bCryptPasswordEncoder;
	
	public User findUserById(Long id) {
		try {
			User user = userRepository.findById(id).get();
			return user;
		} catch (Exception e) {
			log.info("Error: " + e.getMessage());
		}
		return null;
	}
	
	public User findUserByEmail(String email) {
		try {
			User user = userRepository.findByEmail(email);
			return user;	
		} catch (Exception e) {
			log.info("Error " + e.getMessage());
		}
		return null;
	}
	
	@Transactional
	public User create(User user) {
		user.setPassword(bCryptPasswordEncoder.encode(user.getPassword()));
		try {
			User newUser = userRepository.save(user);
			return newUser;
		} catch (Exception e) {
			log.info("Error " + e.getMessage());
		}
		return null;
	}
}
